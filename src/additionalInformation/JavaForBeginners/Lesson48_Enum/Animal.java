package additionalInformation.JavaForBeginners.Lesson48_Enum;

public enum Animal {
    // название enum соответствует типу хранящихся в нем данных. в нашем случае животное
    // перечислим объекты типа Animal. Названия в верхнем регистре через запятую
    // Если в enum есть что-то кроме перечислений (например конструктор) в конце перечисления ставится ";"
    DOG("Собака"), CAT("Кошка"), FROG("Лягушка");
    // аналогично: new DOG("собака"), new CAT("Кошка"), new FROG("Лягушка")

    // Как правило конструкторы в Enum делаются private, так как объекты класса не создаются вне этого класса
    // Объекты enum создаются непосредственно в классе: DOG, CAT, FROG
    // Укажем в конструкторе, перевод имени каждого животного. Конструктор является по умолчанию private

   //Animal() {
    // по умолчанию используется конструктор без аргументов выглядищий так
   // }

    private String translation;
     Animal(String translation) {
        this.translation = translation;
    }
    // В случак создания конструктора, принимающем на вход какие-либо аргументы, необходимо эти параметры определить
    // у каждого объекта класса, указанном в перечислении

    public String getTranslation() {
         return translation;
    }
    // переопределение метода toString доступно, так как родителем enum является класс Object
    @Override
    public String toString() {
         return name() + " - " + translation;
    }
}
