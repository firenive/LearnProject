package additionalInformation.JavaForBeginners.Lesson30_PrimitiveTypes;

public class Primitive {
    public static void main(String[] args) {
        // Есть следующие примитивные типы: int, short
        int i = 2; // занимает 32 бита или 4 байта
        short s = 123; // занимает 16 бит или 2 байта
        byte b = 2; // [-128: 127]
        long l = 21321343431232L; // для больших чисел размер = 64 бита. На конце добавляем большую 'L'
        double d = 34324.444; // для вещественных чисел = 64 бита
        float f = 564564.55f; // для вещественных чисел = 32 бита. для обозначения типа float в конце числа добавляем 'f'
        // примитивные типы ни на что не ссылаются, а хранят в себе данные

        // конвертация из long в int. преобразованное число должно уместиться в int
        int a = 123233;
        long l1 = a; // преобразование из int в long  не требует дополнительных методов, идет неявное приведение типов
        // int x = l1; ошибка компиляции. Требуется дополнительные методы
        // связано это с тем что int вмещает меньшее количество информации чем long.
        int x = (int) l1; // явное приведение типов
        System.out.println(x);

        // То же самое для float и double, так как double вмещает большее количество данных
        // float f1 = 123.45 ошибка
        float f3 = (float) 126.12; // явное приведение типов
        float f1 = 125.65f;
        double d1 = f1; // неявное приведение типов
        // float f2 = d1; ошибка

        double d3 = 23213.534;
        float f4 = (float) d3;

        int q = 123;
        double qd = q; // все целые числа преобразуются неяно в вещественные.
        System.out.println(qd); // 123.0
        // int g = d3; ошибка. нельзя применить неявное приведение, так как теряем вещественную часть
        int g = (int) d3;
        System.out.println(g); // 23213 Вещественная часть отбрасывается

        long lm = Math.round(d3);
        System.out.println(lm); // 23214 округление в большую сторону от 5 включительно

        // byte b1 = 128; ошибка неявной конвертации из int в byte
        byte z = (byte) 128;
        System.out.println(z); // -128. Лимит byte был превышен. Осуществлен переход в конец числового ряда = -128
        byte z1 = (byte) 129; // -127



    }
}
